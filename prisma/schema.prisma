generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id             String  @id @default(uuid()) @db.Uuid
  username       String  @unique
  imageUrl       String  @db.Text
  externalUserId String  @unique
  bio            String? @db.Text

  following  Follow[] @relation("Following")
  followedBy Follow[] @relation("FollowedBy")
  blocking   Block[]  @relation("Blocking")
  blockedBy  Block[]  @relation("BlockedBy")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follow {
  id              String @id @default(uuid()) @db.Uuid
  followingUserId String @db.Uuid
  followedUserId  String @db.Uuid

  followingUser User @relation(name: "Following", fields: [followingUserId], references: [id], onDelete: Cascade)
  followedUser  User @relation(name: "FollowedBy", fields: [followedUserId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([followingUserId, followedUserId])
  @@index([followingUserId])
  @@index([followedUserId])
}

model Block {
  id             String @id @default(uuid()) @db.Uuid
  blockingUserId String @db.Uuid
  blockedUserId  String @db.Uuid

  blockingUser User @relation(name: "Blocking", fields: [blockingUserId], references: [id], onDelete: Cascade)
  blockedUser  User @relation(name: "BlockedBy", fields: [blockedUserId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([blockingUserId, blockedUserId])
  @@index([blockingUserId])
  @@index([blockedUserId])
}
